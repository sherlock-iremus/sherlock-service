plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.3"
    id("io.micronaut.aot") version "4.0.3"
    id("org.openrewrite.rewrite") version("latest.release")
}

version = "0.1"
group = "fr.cnrs.iremus.sherlock"

repositories {
    mavenCentral()
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.serde:micronaut-serde-jsonp")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client-jdk")

    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    runtimeOnly("com.h2database:h2")

    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.inject:jakarta.inject-api")
    implementation("jakarta.annotation:jakarta.annotation-api")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.reactivex.rxjava3:rxjava")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")

    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-ldap")
    implementation("io.micronaut.security:micronaut-security-oauth2")

    implementation("org.apache.jena:jena:4.9.0")
    implementation("org.apache.jena:jena-rdfconnection:4.9.0")
    implementation("org.apache.jena:jena-querybuilder:4.9.0")

    runtimeOnly("org.yaml:snakeyaml")

    implementation('org.apache.groovy:groovy-json')

}


application {
    mainClass.set("fr.cnrs.iremus.sherlock.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("fr.cnrs.iremus.sherlock.*")
    }
}
graalvmNative.toolchainDetection = false
tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

rewrite { activeRecipe("org.openrewrite.java.micronaut.Micronaut3to4Migration") }